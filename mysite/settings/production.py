"""
Django settings for mysite project.

Generated by 'django-admin startproject' using Django 2.0.

For more information on this file, see
https://docs.djangoproject.com/en/2.0/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/2.0/ref/settings/
"""

import os
from .base import *

# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/2.0/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ['SECRET_KEY']

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = False

# ALLOWED_HOSTS = ['zzzf.pythonanywhere.com']
ALLOWED_HOSTS = ['*']

# Database
# https://docs.djangoproject.com/en/2.0/ref/settings/#databases

'''
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.sqlite3',
        'NAME': os.path.join(BASE_DIR, 'db.sqlite3'),
    }
}
'''
DATABASE_PASSWORD = os.environ['DATABASE_PASSWORD']
DATABASES = {
    'default': {
        'ENGINE': 'django.db.backends.mysql',
        'NAME': 'mysite_db',
        'USER': 'zzzf',
        'PASSWORD': DATABASE_PASSWORD,
        'HOST':'',  # 数据库所在主机。可以设置为空，表示当前主机，也可以用localhost，也代表当前主机
        'PORT': '3306',
    }
}

# 发送邮件设置
# https://docs.djangoproject.com/en/2.0/ref/settings/#email
# https://docs.djangoproject.com/en/2.0/topics/email/
EMAIL_BACKEND = 'django.core.mail.backends.smtp.EmailBackend'   # email相关的默认配置，可写可不写
EMAIL_HOST = 'smtp.qq.com'  # 我们是用qq邮箱进行发送，qq邮箱发送邮件是用到一个SMTP协议，qq邮箱提供的EMAIL_HOST是smtp.qq.com，它通过这个服务器 这个域名去发送
# EMAIL_PORT = 25 # 发送邮件提供的端口号是25
EMAIL_PORT = 465 # 发送邮件提供的端口号
EMAIL_HOST_USER = '1248285187@qq.com'  # 邮箱地址
EMAIL_HOST_PASSWORD = os.environ['EMAIL_HOST_PASSWORD']    # 授权码
EMAIL_SUBJECT_PREFIX = '[张张张的博客]'   # 发送前缀
# EMAIL_USE_TLS = True # 与SMTP服务器通信时，是否启动TLS链接（安全链接）
EMAIL_USE_SSL = True # 与SMTP服务器通信时，是否启动安全链接

# 配置管理员(可以配置多个)
ADMINS = (
    ('admin', '1248285187@qq.com'), # 元组：管理员名称、邮箱
)
# 日志文件
LOGGING = {
    'version': 1, # 版本，自己命名
    'disable_existing_loggers': False, # 是否禁用已经存在的记录器
    'handlers': {   # 处理器
        'file': {   # 把日志写到一个文件里面
            'level': 'DEBUG',
            'class': 'logging.FileHandler',
            'filename': '/home/mysite_debug.log',    # 指定目录，
        },
        'mail_admins': {    # 发送邮件给管理员
            'level': 'ERROR',
            'class': 'django.utils.log.AdminEmailHandler',
        }
    },
    'loggers': {    #日志记录器
        'django': {
            'handlers': ['file'],   # 启用‘file’这个处理器
            'level': 'DEBUG',   # 级别
            'propagate': True,  # 日志记录完之后，需不需要继续往上传递（DEBUG-->DEFAULT-->WARNING-->ERROR)
        },
        'django.request': {
            'handlers': ['mail_admins'],
            'level': 'ERROR',
            'propagate': False,
        },
    },
}